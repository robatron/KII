' {$STAMP BS2}
' {$PBASIC 2.5}

' pin shortcuts
btn0		PIN 0
btn1		PIN 1
greenLED	PIN 14
redLED		PIN 15

' init passcode variables
passcodeLen	CON 6	' num of digits in the passcode
nrOfButtons	CON 2	' num of physical buttons
passcode	VAR Nib(passcodeLen)	' to store the passcode
btnHistory	VAR Nib(passcodeLen)	' history of buttons pushed

' function I/O
lastBtn	VAR Nib	' Input for pushRecord. Last button that was pressed
match	VAR Bit	' Output for testMatch. If passcode and history match

' *THE* passcode
passcode(0) = 0
passcode(1) = 0
passcode(2) = 1
passcode(3) = 1
passcode(4) = 0
passcode(5) = 1

' helper vars
btnWrk	VAR Byte(nrOfButtons)	' for use by the BUTTON function
i		VAR Byte				' general counter

'''''''''''
' M A I N '
'''''''''''

main:
   GOSUB lock

   HIGH 5
   INPUT 4

   DO
       LOW 4
       INPUT 4

       SLEEP 500

       IF(IN4) THEN
           GOSUB unlock
       ELSE
           GOSUB lock
       ENDIF
   LOOP

lock:
   HIGH redLED
   LOW greenLED
   RETURN

unlock:
   DO
		LOW redLED
		HIGH greenLED
   LOOP

''''''''''''''''''''''''''
' button press functions '
''''''''''''''''''''''''''

btn0pressed:
	lastBtn = 0
	GOSUB btnPressed
	RETURN

btn1pressed:
	lastBtn = 1
	GOSUB btnPressed
	RETURN

btnPressed:
	DEBUG "Button ", DEC lastBtn, " pressed! "
	GOSUB pushRecord
	GOSUB printHistory
	GOSUB testMatch
	IF(match)THEN
		DEBUG "Passcode MATCHED!!",CR
 		GOTO unlock
	ELSE
		DEBUG "Password not matched yet.",CR
		GOSUB lock
	ENDIF
	RETURN

'''''''''''
' helpers '
'''''''''''

testMatch:
	' see if the password history array and the passcode array match. If so, set
	' match to 1, otherwise, set match to 0
	FOR i = 0 TO passcodeLen-1
		' if a mismatch is found, set match to 0 and return
		IF(passcode(i)<>btnHistory(i))THEN
			match = 0
			RETURN
		ENDIF
	NEXT
	' otherwise, no mismatches were found. Set match to 1 and return
	match = 1
	RETURN

pushRecord:
	' push the value in record onto the bottom of btnHistory array. Each element
	' will be shifted into the previous cell, and the 0th item will be thrown
	' out. E.g., if we push the value 4 onto [0, 1, 2, 3], it will become
	' [1, 2, 3, 4].
	FOR i = 0 TO passcodeLen-2
		btnHistory(i) = btnHistory(i+1)
	NEXT
		btnHistory(passcodeLen-1) = lastBtn
	RETURN

printHistory:
	' print the button history array
	DEBUG "Button history array = ["
	FOR i = 0 TO passcodeLen-1
		DEBUG DEC btnHistory(i)
		IF(i<>passcodeLen-1) THEN
			DEBUG ", "
		ENDIF
	NEXT
	DEBUG "]", CR
	RETURN
